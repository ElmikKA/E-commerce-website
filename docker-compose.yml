services:
#  kafka:
#    image: docker.io/bitnami/kafka:3.9
#    networks:
#      - buyit-network
#    ports:
#      - "9092:9092"
#    volumes:
#      - "kafka_data:/bitnami"
#    environment:
#      - KAFKA_CFG_NODE_ID=0
#      - KAFKA_CFG_PROCESS_ROLES=controller,broker
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092  # Corrected: Use 'kafka' hostname
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
#      - ALLOW_PLAINTEXT_LISTENER=yes
#    healthcheck:
#      test: [ "CMD-SHELL", "echo", "$$(nc -z localhost 9092)" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  configserver:
    image: "koodjohvi/configserver:buyit"
    container_name: configserver-ms
    ports:
      - "8071:8071"
#    depends_on:
##      kafka:
##        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  eurekaserver:
    image: "koodjohvi/eurekaserver:buyit"
    container_name: eurekaserver-ms
    ports:
      - "8070:8070"
    depends_on:
#      kafka:
#        condition: service_healthy
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"

    networks:
      - buyit-network

  users:
    image: "koodjohvi/users:buyit"
    container_name: user-ms
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
#      kafka:
#        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "users"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  products:
    image: "koodjohvi/products:buyit"
    container_name: products-ms
    ports:
      - "8090:8090"
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
#      kafka:
#        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "products"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  media:
    image: "koodjohvi/media:buyit"
    container_name: media-ms
    ports:
      - "9000:9000"
    volumes:
      - ./uploads:/uploads
    healthcheck:
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
#      kafka:
#        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "media"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  gatewayserver:
    image: "koodjohvi/gatewayserver:buyit"
    container_name: gatewayserver-ms
    ports:
      - "8072:8072"
    depends_on:
      users:
        condition: service_healthy
      products:
        condition: service_healthy
      media:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

#volumes:
#  kafka_data:
#    driver: local

networks:
  buyit-network:
    driver: bridge