server:
  port: 9000

spring:
  application:
    name: "media"
  profiles:
    active: "prod"
#  kafka:
#    bootstrap-servers: "kafka:9092"
#    consumer:
#      group-id: media-service-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.trusted.packages: "*"
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  data:
    mongodb:
      uri: "mongodb+srv://ingo:qFwuU6lJHI9kkHbl@buyit.9ga1j.mongodb.net/media_db?retryWrites=true&w=majority&appName=BuyIt"
      database: media_db
  config:
    import: "optional:configserver:http://localhost:8071/"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "media"
    description: "Buy-it Media Microservice"
    version: "1.0.0"

logging:
  level:
    com:
      example:
        Media: DEBUG
  pattern:
    level: "%5p [${spring.application.name}, %X{trace_id}, %X{span_id}]"
#springdoc:
#  api-docs:
#    path: /v3/api-docs
#  swagger-ui:
#    path: /swagger-ui.html
