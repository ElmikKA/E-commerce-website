server:
  port: 8090

spring:
  application:
    name: "products"
  profiles:
    active: "prod"
#  kafka:
#    bootstrap-servers: "kafka:9092"
#    consumer:
#      group-id: product-service-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      properties:
#        spring.json.trusted.packages: "*"
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  data:
    mongodb:
      uri:
      database: product_db
  config:
    import: "optional:configserver:http://localhost:8071/"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "products"
    description: "Buy-it Products Microservice"
    version: "1.0.0"

logging:
  level:
    com:
      example:
        Products: DEBUG